server:
  port: 8080

spring:
  # 应用名称
  application:
    name: server-gateway
  cloud:
    gateway:
      default-filters:
      - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
      - name: RequestSize
        args:
          # 单位字节
          maxSize: 5000000
      - name: Retry
        args:
          retries: 3
          statuses: BAD_GATEWAY
      routes:
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Path=/**
        filters:
        - name: Hystrix
          args:
            name: fetchIngredients
            fallbackUri: forward:/fallback
      - id: provider-hello-fallback
        uri: http://localhost:8080
        predicates:
        - Path=/fallback

# hystrix   
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000
          

logging:
  level:
    org.springframework.cloud.gateway: trace
    org.springframework.http.server.reactive: debug
    org.springframework.web.reactive: debug
    reactor.ipc.netty: debug
    
---
spring:
  profiles: after_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - After=2019-01-20T17:42:47.789-07:00[America/Denver]
        filters:
        - AddResponseHeader=X-Request-Foo, Bar
  
---
spring:
  profiles: header_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Header=X-Request-Id

---
spring:
  profiles: cookie_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Cookie=name, forezp
        
---
spring:
  profiles: host_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Host=**.xxx.com

---
spring:
  profiles: method_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Method=GET

---
spring:
  profiles: path_route
  cloud:
    gateway:
      routes:
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Path=/foo/**
        filters:
        # 去除掉foo的前缀
        - StripPrefix=1
        
---
spring:
  profiles: query_route
  cloud:
    gateway:
      routes: 
      - id: provider-hello
        uri: http://localhost:8181
        predicates:
        - Query=foo,2
